{"ast":null,"code":"import{Type}from\"./action.type\";import React,{useReducer}from\"react\";export const initialState={basket:[],user:null};export const reducer=(state,action)=>{switch(action.type){case Type.ADD_TO_BASKET://check if the item exist\nconst existingItem=state.basket.find(item=>item.id===action.item.id);if(!existingItem){// If the item doesn't exi t, add it with an initial amount of 1\nreturn{...state,basket:[...state.basket,{...action.item,amount:1}]};}else{// If the item exists, update the amount\nconst updatedBasket=state.basket.map(item=>item.id===action.item.id?{...item,amount:item.amount+1}:item);return{...state,basket:updatedBasket};}case Type.REMOVE_FROM_BASKET:const index=state.basket.findIndex(item=>item.id===action.id);let newBasket=[...state.basket];if(index>=0){if(newBasket[index].amount>1){// Decrease the amount by 1 if it's greater than 1\nnewBasket[index]={...newBasket[index],amount:newBasket[index].amount-1};}else{// If amount is 1, remove the item from the basket\nnewBasket.splice(index,1);}}return{...state,basket:newBasket};case Type.EMPTY_BASKET:return{...state,basket:[]};case Type.SET_USER:return{...state,user:action.user};default:return state;}};//const [state, dispatch] = useReducer(reducer, initialState);","map":{"version":3,"names":["Type","React","useReducer","initialState","basket","user","reducer","state","action","type","ADD_TO_BASKET","existingItem","find","item","id","amount","updatedBasket","map","REMOVE_FROM_BASKET","index","findIndex","newBasket","splice","EMPTY_BASKET","SET_USER"],"sources":["C:/Users/selam/Desktop/evangadi class/phase 4 projects/Amazonclone_proj/amazonclone_proj/frontend/src/Utility/reducer.js"],"sourcesContent":["import { Type } from \"./action.type\";\r\nimport React, { useReducer } from \"react\";\r\nexport const initialState = {\r\n  basket: [],\r\n  user: null,\r\n};\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case Type.ADD_TO_BASKET:\r\n      //check if the item exist\r\n      const existingItem = state.basket.find(\r\n        (item) => item.id === action.item.id\r\n      );\r\n      if (!existingItem) {\r\n        // If the item doesn't exi t, add it with an initial amount of 1\r\n        return {\r\n          ...state,\r\n          basket: [...state.basket, { ...action.item, amount: 1 }],\r\n        };\r\n      } else {\r\n        // If the item exists, update the amount\r\n        const updatedBasket = state.basket.map((item) =>\r\n          item.id === action.item.id\r\n            ? { ...item, amount: item.amount + 1 }\r\n            : item\r\n        );\r\n\r\n        return {\r\n          ...state,\r\n          basket: updatedBasket,\r\n        };\r\n      }\r\n    case Type.REMOVE_FROM_BASKET:\r\n      const index = state.basket.findIndex((item) => item.id === action.id);\r\n      let newBasket = [...state.basket];\r\n      if (index >= 0) {\r\n        if (newBasket[index].amount > 1) {\r\n          // Decrease the amount by 1 if it's greater than 1\r\n          newBasket[index] = {\r\n            ...newBasket[index],\r\n            amount: newBasket[index].amount - 1,\r\n          };\r\n        } else {\r\n          // If amount is 1, remove the item from the basket\r\n          newBasket.splice(index, 1);\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        basket: newBasket,\r\n      };\r\n      case Type.EMPTY_BASKET:\r\n      return {\r\n        ...state,\r\n        basket: [],\r\n      };\r\n    case Type.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//const [state, dispatch] = useReducer(reducer, initialState);\r\n"],"mappings":"AAAA,OAASA,IAAI,KAAQ,eAAe,CACpC,MAAO,CAAAC,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,MAAO,MAAM,CAAAC,YAAY,CAAG,CAC1BC,MAAM,CAAE,EAAE,CACVC,IAAI,CAAE,IACR,CAAC,CACD,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACxC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,CAAAT,IAAI,CAACU,aAAa,CACrB;AACA,KAAM,CAAAC,YAAY,CAAGJ,KAAK,CAACH,MAAM,CAACQ,IAAI,CACnCC,IAAI,EAAKA,IAAI,CAACC,EAAE,GAAKN,MAAM,CAACK,IAAI,CAACC,EACpC,CAAC,CACD,GAAI,CAACH,YAAY,CAAE,CACjB;AACA,MAAO,CACL,GAAGJ,KAAK,CACRH,MAAM,CAAE,CAAC,GAAGG,KAAK,CAACH,MAAM,CAAE,CAAE,GAAGI,MAAM,CAACK,IAAI,CAAEE,MAAM,CAAE,CAAE,CAAC,CACzD,CAAC,CACH,CAAC,IAAM,CACL;AACA,KAAM,CAAAC,aAAa,CAAGT,KAAK,CAACH,MAAM,CAACa,GAAG,CAAEJ,IAAI,EAC1CA,IAAI,CAACC,EAAE,GAAKN,MAAM,CAACK,IAAI,CAACC,EAAE,CACtB,CAAE,GAAGD,IAAI,CAAEE,MAAM,CAAEF,IAAI,CAACE,MAAM,CAAG,CAAE,CAAC,CACpCF,IACN,CAAC,CAED,MAAO,CACL,GAAGN,KAAK,CACRH,MAAM,CAAEY,aACV,CAAC,CACH,CACF,IAAK,CAAAhB,IAAI,CAACkB,kBAAkB,CAC1B,KAAM,CAAAC,KAAK,CAAGZ,KAAK,CAACH,MAAM,CAACgB,SAAS,CAAEP,IAAI,EAAKA,IAAI,CAACC,EAAE,GAAKN,MAAM,CAACM,EAAE,CAAC,CACrE,GAAI,CAAAO,SAAS,CAAG,CAAC,GAAGd,KAAK,CAACH,MAAM,CAAC,CACjC,GAAIe,KAAK,EAAI,CAAC,CAAE,CACd,GAAIE,SAAS,CAACF,KAAK,CAAC,CAACJ,MAAM,CAAG,CAAC,CAAE,CAC/B;AACAM,SAAS,CAACF,KAAK,CAAC,CAAG,CACjB,GAAGE,SAAS,CAACF,KAAK,CAAC,CACnBJ,MAAM,CAAEM,SAAS,CAACF,KAAK,CAAC,CAACJ,MAAM,CAAG,CACpC,CAAC,CACH,CAAC,IAAM,CACL;AACAM,SAAS,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC,CAAC,CAC5B,CACF,CACA,MAAO,CACL,GAAGZ,KAAK,CACRH,MAAM,CAAEiB,SACV,CAAC,CACD,IAAK,CAAArB,IAAI,CAACuB,YAAY,CACtB,MAAO,CACL,GAAGhB,KAAK,CACRH,MAAM,CAAE,EACV,CAAC,CACH,IAAK,CAAAJ,IAAI,CAACwB,QAAQ,CAChB,MAAO,CACL,GAAGjB,KAAK,CACRF,IAAI,CAAEG,MAAM,CAACH,IACf,CAAC,CAEH,QACE,MAAO,CAAAE,KAAK,CAChB,CACF,CAAC,CAED","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}