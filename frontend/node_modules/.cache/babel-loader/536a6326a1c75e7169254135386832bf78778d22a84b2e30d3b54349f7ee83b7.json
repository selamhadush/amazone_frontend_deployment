{"ast":null,"code":"import React,{useContext,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import{DataContext}from\"../DataProvider/DataProvider\";const ProtectedRoute=_ref=>{let{children,msg,redirect}=_ref;const navigate=useNavigate();const[{user},dispatch]=useContext(DataContext);useEffect(()=>{if(!user){navigate(\"/auth\",{state:{msg,redirect}});}},[user]);return children;};// {\n/* <ProtectedRoute>\r\n    <children/>\r\n</ProtectedRoute> */// }\nexport default ProtectedRoute;","map":{"version":3,"names":["React","useContext","useEffect","useNavigate","DataContext","ProtectedRoute","_ref","children","msg","redirect","navigate","user","dispatch","state"],"sources":["C:/Users/selam/Desktop/evangadi class/phase 4 projects/Amazonclone_proj/amazonclone_proj/frontend/src/components/ProtectedRoute/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { DataContext } from \"../DataProvider/DataProvider\";\r\n\r\nconst ProtectedRoute = ({ children, msg, redirect }) => {\r\n  const navigate = useNavigate();\r\n  const [{ user }, dispatch] = useContext(DataContext);\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate(\"/auth\", { state: { msg, redirect } });\r\n    }\r\n  }, [user]);\r\n\r\n  return children;\r\n};\r\n// {\r\n/* <ProtectedRoute>\r\n    <children/>\r\n</ProtectedRoute> */\r\n// }\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CACpD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,WAAW,KAAQ,8BAA8B,CAE1D,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAiC,IAAhC,CAAEC,QAAQ,CAAEC,GAAG,CAAEC,QAAS,CAAC,CAAAH,IAAA,CACjD,KAAM,CAAAI,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAC,CAAEQ,IAAK,CAAC,CAAEC,QAAQ,CAAC,CAAGX,UAAU,CAACG,WAAW,CAAC,CACpDF,SAAS,CAAC,IAAM,CACd,GAAI,CAACS,IAAI,CAAE,CACTD,QAAQ,CAAC,OAAO,CAAE,CAAEG,KAAK,CAAE,CAAEL,GAAG,CAAEC,QAAS,CAAE,CAAC,CAAC,CACjD,CACF,CAAC,CAAE,CAACE,IAAI,CAAC,CAAC,CAEV,MAAO,CAAAJ,QAAQ,CACjB,CAAC,CACD;AACA;AACA;AACA,oBACA;AACA,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}